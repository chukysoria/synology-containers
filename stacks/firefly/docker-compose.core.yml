services:
  app:
    image: fireflyiii/core:version-6.2.13@sha256:bb1620372ef6f4d66ac4833eb85d30359bbb56576f18f8efe85087223cf4f683
    hostname: app
    container_name: firefly_iii_core
    networks:
      - firefly-net
      - firefly-net-frontend
      - firefly-db-net
      - nodered-backend
    restart: always
    env_file:
      - ../../stack.env
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    labels:
      traefik.enable: true
      traefik.docker.network: firefly-net-frontend
      traefik.http.routers.fireflyiii-rtr.rule: Host(`firefly.${DOMAIN:-boulebar.duckdns.org}`)
      traefik.http.routers.fireflyiii-rtr.middlewares: authentik@docker

  firefly-pico:
    image: cioraneanu/firefly-pico:1.7.1@sha256:ab5bb9d187b339676e61c6adc2970e4babf20bab482321861fb98cb8fc0e40c6
    container_name: firefly_pico
    environment:
      - FIREFLY_URL=http://app:8080
      - DB_CONNECTION=pgsql
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_DATABASE=firefly-pico
      - DB_USERNAME=firefly-pico
      - DB_PASSWORD=${PG_PICO_PASS:?Firefly Pico DB Password}
      - TZ=${TZ:-Europe/Madrid}
    networks:
      - firefly-net
      - firefly-net-frontend
      - firefly-db-net
    depends_on:
      - app
    labels:
      traefik.enable: true
      traefik.docker.network: firefly-net-frontend
      traefik.http.routers.firefly-pico-rtr.rule: Host(`ffpico.${DOMAIN:-boulebar.duckdns.org}`)
      traefik.http.services.firefly-pico-svc.loadbalancer.server.port: 80

  cron:
    image: ghcr.io/chukysoria/baseimage-alpine:v0.7.14-3.21@sha256:b48aae1f577b501f128277137637eeeba5ac1b061dab6fd1385742949838cd7a
    networks:
      - firefly-net
    restart: unless-stopped
    environment:
      # General LinuxServer.io
      PUID: ${PUID:-1029}
      PGID: ${PGID:-65536}
      TZ: ${TZ:-Europe/Madrid}
      DOCKER_MODS: "linuxserver/mods:universal-cron|linuxserver/mods:universal-package-install|ghcr.io/chukysoria/tailscale-mod:v1.1.5"
      INSTALL_PIP_PACKAGES: ${INSTALL_PIP_PACKAGES:-}
      INSTALL_PACKAGES: ${INSTALL_PACKAGES:-}
      # Tailscale
      TAILSCALE_AUTHKEY: ${TAILSCALE_AUTHKEY:?Tailscale Authorization key}
      TAILSCALE_USE_SSH: 1
      TAILSCALE_STATE_DIR: /tsconfig
      TAILSCALE_HOSTNAME: firefly-cron
    volumes:
      - ${BASE_PATH:-/volume2/docker/}firefly/cron:/config/crontabs:rw
      - ts_ff_cron:/tsconfig

volumes:
   firefly_iii_upload:
   ts_ff_cron:

networks:
  firefly-net:
    name: firefly-net
    driver: bridge
  firefly-net-frontend:
    external: true # Defined in traefik
  firefly-db-net:
    external: true # Defined in databases
  nodered-backend:
    external: true # Defined in nodered
