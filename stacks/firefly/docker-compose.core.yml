services:
  app:
    image: fireflyiii/core:version-6.2.4
    hostname: app
    container_name: firefly_iii_core
    networks:
      - firefly-net
      - firefly-net-frontend
      - firefly-db-net
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    labels:
      traefik.enable: true
      traefik.docker.network: firefly-net-frontend
      traefik.http.routers.fireflyiii-rtr.rule: Host(`firefly.${DOMAIN:-boulebar.duckdns.org}`)
      traefik.http.routers.fireflyiii-rtr.middlewares: authentik@docker

  fftc:
    image: akopulko/ffiiitc:latest
    hostname: fftc
    networks:
      - firefly-net
    restart: always
    container_name: ffiiitc
    environment:
      - FF_APP_URL=http://app:8080
      - FF_API_KEY=${FF_API_KEY:?Firefly III API Key}
    volumes:
      - ffiiitc-data:/app/data
    depends_on:
      - app

  firefly-pico:
    image: cioraneanu/firefly-pico:1.6.0
    container_name: firefly_pico
    environment:
      - FIREFLY_URL=http://app:8080
      - DB_CONNECTION=pgsql
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_DATABASE=firefly-pico
      - DB_USERNAME=firefly-pico
      - DB_PASSWORD=${PG_PICO_PASS:?Firefly Pico DB Password}
      - TZ=${TZ:-Europe/Madrid}
    networks:
      - firefly-net
      - firefly-net-frontend
      - firefly-db-net
    depends_on:
      - app
    labels:
      traefik.enable: true
      traefik.docker.network: firefly-net-frontend
      traefik.http.routers.firefly-pico-rtr.rule: Host(`ffpico.${DOMAIN:-boulebar.duckdns.org}`)
      traefik.http.services.firefly-pico-svc.loadbalancer.server.port: 80

volumes:
   firefly_iii_upload:
   ffiiitc-data:

networks:
  firefly-net:
    driver: bridge
  firefly-net-frontend:
    external: true # Defined in traefik
  firefly-db-net:
    external: true # Defined in databases
