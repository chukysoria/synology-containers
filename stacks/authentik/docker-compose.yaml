---
services:
  authentik-server:
    image: ghcr.io/goauthentik/server:2024.12.2@sha256:017794a605d295bf1029da317e572f379e7f25d9b6fcae2fe7dad0d4b0753b42
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      TZ: ${TZ:-Europe/Madrid}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: timescaledb
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
      AUTHENTIK_COOKIE_DOMAIN: ${DOMAIN}
    volumes:
      - ${BASE_PATH:-/volume2/docker/}authentik/media:/media
      - ${BASE_PATH:-/volume2/docker/}authentik/custom-templates:/templates
    networks:
      - frontend
      - authentik
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      ## HTTP Routers
      traefik.http.routers.authentik-rtr.rule: Host(`authentik.$DOMAIN`)
      ## HTTP Services
      traefik.http.routers.authentik-rtr.service: authentik-svc
      traefik.http.services.authentik-svc.loadBalancer.server.port: 9000
      ## Individual Application forwardAuth regex (catch any subdomain using individual application forwardAuth)  
      traefik.http.routers.authentik-rtr-outpost.rule: HostRegexp(`{subdomain:[a-z0-9-]+}.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      # `authentik-proxy` refers to the service name in the compose file.
      traefik.http.middlewares.authentik.forwardauth.address: http://authentik-server:9000/outpost.goauthentik.io/auth/traefik
      traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version,Authorization   

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.12.2@sha256:017794a605d295bf1029da317e572f379e7f25d9b6fcae2fe7dad0d4b0753b42
    restart: unless-stopped
    command: worker
    environment:
      TZ: ${TZ:-Europe/Madrid}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: timescaledb
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_EMAIL__HOST: smtp.gmail.com
      AUTHENTIK_EMAIL__PORT: 465
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: FALSE
      AUTHENTIK_EMAIL__USE_SSL: TRUE
      AUTHENTIK_EMAIL__TIMEOUT: 10
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BASE_PATH:-/volume2/docker/}authentik/media:/media
      - ${BASE_PATH:-/volume2/docker/}authentik/certs:/certs
      - ${BASE_PATH:-/volume2/docker/}authentik/custom-templates:/templates
    networks:
      - authentik

networks:
  authentik:
    external: true # Defined in databases
  frontend:
    external: true # Defined in databases
