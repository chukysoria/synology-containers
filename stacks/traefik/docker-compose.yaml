---
volumes:
  certs:
  ts_traefik:

services:
  traefik:
    image: ghcr.io/chukysoria/traefik:v1.1.9@sha256:7f1ea553f8899394ef1476e145b66dd80407d368bb1e0c160b7998ac3d61c81f
    networks:
      frontend:
      macvlan:
        ipv4_address: 192.168.1.49
      firefly-net-frontend:
    dns:
      - 1.1.1.1
      - 8.8.8.8
    extra_hosts:
      - host.docker.internal:192.168.1.48
    environment:
      # General LinuxServer.io
      PUID: ${PUID:-1029}
      PGID: ${PGID:-65536}
      TZ: ${TZ:-Europe/Madrid}
      DOCKER_MODS: "ghcr.io/chukysoria/tailscale-mod:v1.1.5"
      # Tailscale
      TAILSCALE_AUTHKEY: ${TAILSCALE_AUTHKEY:?Tailscale Authorization key}
      TAILSCALE_USE_SSH: 1
      TAILSCALE_STATE_DIR: /tsconfig
      TAILSCALE_HOSTNAME: traefik
      # Traefik
      DUCKDNS_TOKEN: ${DUCKDNS_TOKEN:?DuckDNS API Token}
    volumes:
      - ${BASE_PATH:-/volume2/docker/}certs:/certs:rw
      - ${BASE_PATH:-/volume2/docker/}traefik:/config:rw
      - ts_traefik:/tsconfig
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: true
      # Routers
      traefik.http.routers.traefik-rtr.rule: Host(`traefik.${DOMAIN:-boulebar.duckdns.org}`)
      traefik.http.routers.traefik-rtr.service: api@internal
      # Middlewares
      traefik.http.routers.traefik-rtr.middlewares: authentik@docker
    restart: unless-stopped

networks:
  frontend:
    external: true # Defined in portainer
  macvlan:
    external: true # Defined in adguard
  firefly-net-frontend:
    external: true # Defined in firefly
  