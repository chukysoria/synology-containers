---
# Consolidated Docker Compose File
volumes:
  certs:
  pgadmin:
  ts_duplicati:
  ts_grocy:
  ts_hass:
  ts_jellyfin:
  ts_nodered:
  ts_qbit:
  ts_sonarr:
  ts_bazarr:
  ts_prowlarr:
  ts_radarr:
  ts_traefik:
  ts_vaultwarden:
  ts_code-server:
  ts_lidarr:

services:
  # Databases
  timescale-db:
    extends:
      file: databases/docker-compose.yaml
      service: timescale-db  
  redis:
    extends:
      file: databases/docker-compose.yaml
      service: redis
  pgadmin:
    extends:
      file: databases/docker-compose.yaml
      service: pgadmin
  # Authentik
  authentik-server:
    extends:
      file: authentik/docker-compose.yaml
      service: authentik-server
    depends_on:
      redis:
        condition: service_healthy
      timescale-db:
        condition: service_healthy
  authentik-worker:
    extends:
      file: authentik/docker-compose.yaml
      service: authentik-worker    
    depends_on:
      redis:
        condition: service_healthy
      timescale-db:
        condition: service_healthy
  # Traefik
  traefik:
    extends:
      file: traefik/docker-compose.yaml
      service: traefik
  # Duplicati
  #duplicati:
  #  extends:
  #    file: duplicati/docker-compose.yaml
  #    service: duplicati  
  # Grocy
  grocy:
    extends:
      file: grocy/docker-compose.yaml
      service: grocy  
  # Home Assistant
  homeassistant:
    extends:
      file: home-assistant/docker-compose.yaml
      service: homeassistant  
    depends_on:
      timescale-db:
        condition: service_healthy        
  # Jellyfin
  jellyfin:
    extends:
      file: jellyfin/docker-compose.yaml
      service: jellyfin  
  jellyseerr:
    extends:
      file: jellyfin/docker-compose.yaml
      service: jellyseerr  
    depends_on:
      jellyfin:
        condition: service_healthy
  # Monitoring
  grafana:
    extends:
      file: monitoring/docker-compose.yaml
      service: grafana
    depends_on:
      timescale-db:
        condition: service_healthy
  # nodered
  nodered:
    extends:
      file: nodered/docker-compose.yaml
      service: nodered  
    depends_on:
      homeassistant:
        condition: service_healthy
  # qBitTorrent
  # gluetun:
  #   extends:
  #     file: qbittorrent/docker-compose.yaml
  #     service: gluetun  
  qbittorrent:
    extends:
      file: qbittorrent/docker-compose.yaml
      service: qbittorrent  
    #depends_on:
    #  gluetun:
    #    condition: service_healthy 
  unpackerr:
    extends:
      file: qbittorrent/docker-compose.yaml
      service: unpackerr  
    depends_on:
      qbittorrent:
        condition: service_healthy 

  # Servarr
  radarr:
    extends:
      file: servarr/docker-compose.yaml
      service: radarr  
    depends_on:
      qbittorrent:
        condition: service_healthy
      prowlarr:
        condition: service_healthy
  sonarr:
    extends:
      file: servarr/docker-compose.yaml
      service: sonarr
    depends_on:
      qbittorrent:
        condition: service_healthy
      prowlarr:
        condition: service_healthy
  bazarr:
    extends:
      file: servarr/docker-compose.yaml
      service: bazarr
  prowlarr:
    extends:
      file: servarr/docker-compose.yaml
      service: prowlarr  
    depends_on:
      qbittorrent:
        condition: service_healthy
  lidarr:
    extends:
      file: servarr/docker-compose.yaml
      service: lidarr
    depends_on:
      qbittorrent:
        condition: service_healthy
      prowlarr:
        condition: service_healthy
  # VS Code
  vaultwarden:
    extends:
      file: vaultwarden/docker-compose.yaml
      service: vaultwarden  
  # Vaultwarden
  code-server:
    extends:
      file: codeserver/docker-compose.yaml
      service: code-server  
  # Ghostfolio
  #ghostfolio:
  #  extends:
  #    file: ghostfolio/docker-compose.yaml
  #    service: ghostfolio  
  #  depends_on:
  #    timescale-db:
  #      condition: service_healthy
  #    redis:
  #      condition: service_healthy
  # Sablier
  sablier:
    extends:
      file: traefik/docker-compose.yaml
      service: sablier  
    depends_on:
      code-server:
        condition: service_healthy
        restart: true
     # ghostfolio:
     #   condition: service_healthy
     #   restart: true
      grafana:
        condition: service_healthy
        restart: true
      grocy:
        condition: service_healthy
        restart: true
      jellyseerr:
        condition: service_healthy
        restart: true
      lidarr:
        condition: service_healthy
        restart: true
      pgadmin:
        condition: service_healthy
        restart: true
      radarr:
        condition: service_healthy
        restart: true

networks:
  authentik:
    name: authentik
    ipam:
      driver: default
      config:
        - subnet: 172.19.2.0/24
          gateway: 172.19.2.1
  database:
    name: database
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1
  frontend:
    external: true # Defined in Portainer
  grafana-net:
    name: grafana-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.3.0/24
          gateway: 172.19.3.1  
  grocy-net:
    name: grocy-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.4.0/24
          gateway: 172.19.4.1 
  jellyfin-net:
    name: jellyfin-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.5.0/24
          gateway: 172.19.5.1
  firefly-net:
    name: firefly-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.6.0/24
          gateway: 172.19.6.1   
  firefly-net-frontend:
    name: firefly-net-frontend
    ipam:
      driver: default
      config:
        - subnet: 172.19.7.0/24
          gateway: 172.19.7.1    
  firefly-db-net:
    name: firefly-db-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.8.0/24
          gateway: 172.19.8.1
  ghostfolio-db-net:
    name: ghostfolio-db-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.9.0/24
          gateway: 172.19.9.1
  ghostfolio-net-frontend:
    name: ghostfolio-net-frontend
    ipam:
      driver: default
      config:
        - subnet: 172.19.10.0/24
          gateway: 172.19.10.1
  macvlan:
    external: true # Defined in Adguard
  nodered-backend:
    driver: bridge
    name: nodered-backend
