---
services:
  timescale-db:
    image: timescale/timescaledb-ha:pg17-ts2.17@sha256:2e60265948b351ad7a7fdd147d8ac0c0571409a33f48991883e0160620cd3f3e
    container_name: timescaledb
    restart: unless-stopped    
    # user: ${PUID:-1029}:${PGID:-65536}
    volumes:
      - ${BASE_PATH:-/volume2/docker/}databases/timescaledb-pg17:/home/postgres/pgdata/data
    networks:
      database:
        ipv4_address: 172.19.0.4
      grafana-net:
      authentik:
    # ports:
    #   - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      TZ: ${TZ:-Europe/Madrid}
      POSTGRES_USER: ${TS_USER:-postgres}
      POSTGRES_PASSWORD: ${TS_PASS:?database password required}
      POSTGRES_DB: ${TS_DB:-homeassistant}      

  redis:
    image: redis:7.4.2-alpine@sha256:12129f2f3773d5aebc5f549ea14850bc59a6c0c1233d7598c2bc6984a83ded53
    container_name: redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${BASE_PATH:-/volume2/docker/}databases/redis:/data:uid=${PUID:-1029},gid=${PGID:-65536}
    networks:
      database:
        ipv4_address: 172.19.0.3
      authentik:

  pgadmin:
    image: dpage/pgadmin4:8.14@sha256:8a68677a97b8c8d1427dc915672a26d2c4a04376916a68256f53d669d6171be7
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER:-user@domain.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:?PGAdmin password required}
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ${BASE_PATH:-/volume2/docker/}databases/pgadmin/config_local.py:/pgadmin4/config_local.py
    networks:
      frontend:
      database:
        ipv4_address: 172.19.0.5
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      start_period: 2m
      interval: 30s
      retries: 5
      timeout: 3s
      # start_interval: 5s
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.pgadmin-rtr.rule: Host(`pgadmin.${DOMAIN:-boulebar.duckdns.org}`)

volumes:
  pgadmin:

networks:
  authentik:
    name: authentik
    ipam:
      driver: default
      config:
        - subnet: 172.19.2.0/24
          gateway: 172.19.2.1
  database:
    name: database
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1
  grafana-net:
    name: grafana-net
    ipam:
      driver: default
      config:
        - subnet: 172.19.3.0/24
          gateway: 172.19.3.1  
  frontend:
    external: true # Defined in portainer
